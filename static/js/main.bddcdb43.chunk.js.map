{"version":3,"sources":["Components/CardTile/CardTile.tsx","common/api.tsx","Components/CardList/CardList.tsx","Components/CardDetails/SizePicker/SizePicker.tsx","Components/CardDetails/CardDetails.tsx","App.tsx","index.tsx"],"names":["CardTile","props","id","img","title","className","to","alt","src","proxy","http","url","a","fetch","response","json","body","CardList","state","products","result","cards","Products","filter","prod","ProductCategory","Name","this","setState","map","product","index","MoonpigProductNo","key","ProductImage","Link","Href","Title","Component","SizePicker","handleChange","event","size","currentTarget","value","handleSubmit","alert","onSubmit","availableSizes","checked","Description","checkedClass","type","onChange","Currency","Price","toFixed","disabled","CardDetails","match","params","thumbnailUrl","AvailableSizes","ThumbnailUrl","App","exact","path","component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.bddcdb43.chunk.js","sourcesContent":["import React from 'react';\nimport \"./CardTile.scss\"\nimport {NavLink} from \"react-router-dom\"\n\nconst CardTile = (props: Props) => {\n  let {\n    id,\n    img,\n    title\n  } = props;\n  return (\n    <div data-test-id=\"card-tile\" className=\"card-tile\">\n      <NavLink to={`/cards/${id}`}>\n        <img className=\"card-tile_img\" alt={title} src={img}/>\n      </NavLink>\n    </div>\n  );\n};\n\ntype Props = {\n  img: string,\n  title: string,\n  id: string\n};\n\nexport default CardTile;","let proxy = \"https://cors-anywhere.herokuapp.com\";\nexport async function http<T>(url: string): Promise<T> {\n  const response = await fetch(`${proxy}/${url}`);\n  const body = await response.json();\n  return body;\n}","import React, { Component } from 'react';\nimport CardTile from \"../CardTile/CardTile\";\nimport \"./CardList.scss\"\nimport {\n  Search,\n  Product\n} from \"../../common/models\"\nimport { http } from \"../../common/api\"\n\nclass CardList extends Component<Props, State> {\n  constructor(props: Props) {\n    super(props);\n    this.state = {\n      products: [],\n    }\n  }\n  async componentDidMount() {\n    let result = await http<Search>(\"https://search.moonpig.com/api/products?size=20&fq=card_shop_id:1\");\n    let cards = result.Products.filter((prod) => prod.ProductCategory.Name === \"greeting cards\");\n    this.setState({\n      products: cards\n    })\n\n  }\n\n  render() {\n    return (\n      <section data-test-id=\"card-list\" className=\"card-list\">\n        {this.state.products.map((product, index) => {\n          return (\n            <CardTile id={product.MoonpigProductNo} key={index} img={product.ProductImage.Link.Href} title={product.Title}/>\n          )\n        })}\n      </section>\n    );\n  }\n}\n\ntype Props = {}\ntype State = {\n  products: Product[];\n}\n\nexport default CardList","import React, { Component } from \"react\";\nimport {Size} from \"../../../common/models\";\nimport \"./SizePicker.scss\"\n\nexport default class SizePicker extends Component<Props, State> {\n  constructor(props: Props) {\n    super(props);\n    this.state = {\n      size: \"\"\n    }\n  }\n\n  handleChange = (event: React.FormEvent<HTMLInputElement>) => {\n    this.setState({\n      size: event.currentTarget.value\n    })\n  };\n\n  handleSubmit = () => {\n    alert(`Thanks for buying!`)\n  }\n\n  render() {\n    return (\n      <div className=\"size-picker\">\n        <p>Select Size:</p>\n        <form onSubmit={this.handleSubmit}>\n          {this.props.availableSizes.map((size, index) => {\n            let checked = this.state.size === size.Description;\n            let checkedClass = checked ? \"size-picker_option--checked\" : \"\";\n            return (\n              <label key={index}>\n                <input\n                  type=\"radio\"\n                  value={size.Description}\n                  checked={checked}\n                  onChange={this.handleChange}\n\n                />\n                <div className={`size-picker_option ${checkedClass}`}>\n                  <p>{size.Name}</p>\n                  <p>{size.Currency}{size.Price.toFixed(2)}</p>\n                </div>\n              </label>\n            );\n          })}\n          <button\n            type=\"submit\"\n            className=\"size-picker_buy-button\"\n            disabled={this.state.size === \"\"}\n          >Buy</button>\n        </form>\n      </div>\n    )\n  }\n}\n\ntype Props = {\n  availableSizes: Size[];\n}\ntype State = {\n  size: string;\n}","import React, { Component } from \"react\";\nimport SizePicker from \"./SizePicker/SizePicker\"\nimport {ProductDetail, Size} from \"../../common/models\";\nimport \"./CardDetails.scss\";\nimport {http} from \"../../common/api\";\n\nexport default class CardDetails extends Component<Props, State> {\n  constructor(props: Props) {\n    super(props);\n    this.state = {\n      id: props.match.params.id,\n      availableSizes: [],\n      thumbnailUrl: \"\",\n      title: \"\"\n    }\n  }\n\n  async componentDidMount() {\n    let {id} = this.state;\n    let result = await http<ProductDetail>(`https://www.moonpig.com/uk/api/product/product/?mpn=${id}`);\n    this.setState({\n      availableSizes: result.AvailableSizes,\n      thumbnailUrl: result.ThumbnailUrl,\n      title: result.Title\n    })\n  }\n\n  render() {\n    let {\n      title,\n      thumbnailUrl,\n      availableSizes\n    } = this.state;\n    return (\n      <section>\n        <h1>{title}</h1>\n        <div className=\"card-details\">\n          <div className=\"card-details__img-container\">\n            <img alt={title} src={thumbnailUrl}/>\n          </div>\n          <SizePicker availableSizes={availableSizes}/>\n        </div>\n      </section>\n    )\n  }\n}\n\ninterface Props {\n  match: {\n    params: {\n      id: string;\n    }\n  }\n};\ntype State = {\n  id: string,\n  availableSizes: Size[],\n  thumbnailUrl: string;\n  title: string;\n}","import React, { Component } from 'react';\nimport './App.scss';\nimport {\n  HashRouter as Router,\n  Switch,\n  Route\n} from \"react-router-dom\";\nimport CardList from \"./Components/CardList/CardList\";\nimport CardDetails from \"./Components/CardDetails/CardDetails\";\n\nclass App extends Component {\n  render() {\n    return (\n      <Router>\n        <div data-test-id=\"app\" className=\"app\">\n          <div className=\"app_container\">\n            <Switch>\n              <Route exact path=\"/\" component={CardList}/>\n              <Route path=\"/cards/:id\" component={CardDetails}/>\n            </Switch>\n          </div>\n        </div>\n      </Router>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}